services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: abdel
      POSTGRES_PASSWORD: abdel
      POSTGRES_DB: RabatWeather
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "abdel", "-d", "RabatWeather"]
      interval: 10s
      retries: 10
    restart: unless-stopped
    
  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      # Configuration pour Adminer
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DEFAULT_DATABASE: RabatWeather
    depends_on:
      - postgres

  redis:
    image: redis:7.2-alpine
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 10
    restart: unless-stopped

  airflow-init:
    image: apache/airflow:2.7.3
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://abdel:abdel@postgres:5432/RabatWeather
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://abdel:abdel@postgres:5432/RabatWeather
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: >
      bash -c "
        echo '‚è≥ En attente de PostgreSQL...'
        until pg_isready -h postgres -p 5432 -U abdel -d RabatWeather; do
          echo 'üìä En attente de PostgreSQL...'
          sleep 5
        done
        echo '‚úÖ PostgreSQL est pr√™t!'
        
        echo 'üîÑ Initialisation de la base Airflow...'
        airflow db upgrade
        
        echo 'üë§ Cr√©ation de l utilisateur admin...'
        airflow users create \
          --username admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@weatherapi.com \
          --password admin || echo '‚ÑπÔ∏è Utilisateur existe d√©j√†'
          
        echo 'üéâ Initialisation Airflow termin√©e!'
      "
    user: "0:0"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  airflow-webserver:
    image: apache/airflow:2.7.3
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://abdel:abdel@postgres:5432/RabatWeather
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://abdel:abdel@postgres:5432/RabatWeather
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    image: apache/airflow:2.7.3
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://abdel:abdel@postgres:5432/RabatWeather
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://abdel:abdel@postgres:5432/RabatWeather
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    depends_on:
      airflow-init:
        condition: service_completed_successfully
  airflow-worker:
    image: apache/airflow:2.7.3
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://abdel:abdel@postgres:5432/RabatWeather
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://abdel:abdel@postgres:5432/RabatWeather
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: celery worker
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    depends_on:
      - airflow-init

volumes:
  postgres-db-volume:
